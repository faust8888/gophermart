// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/faust8888/gophermart/internal/gophermart/service (interfaces: BalanceRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	model "github.com/faust8888/gophermart/internal/gophermart/model"
	gomock "github.com/golang/mock/gomock"
)

// MockBalanceRepository is a mock of BalanceRepository interface.
type MockBalanceRepository struct {
	ctrl     *gomock.Controller
	recorder *MockBalanceRepositoryMockRecorder
}

// MockBalanceRepositoryMockRecorder is the mock recorder for MockBalanceRepository.
type MockBalanceRepositoryMockRecorder struct {
	mock *MockBalanceRepository
}

// NewMockBalanceRepository creates a new mock instance.
func NewMockBalanceRepository(ctrl *gomock.Controller) *MockBalanceRepository {
	mock := &MockBalanceRepository{ctrl: ctrl}
	mock.recorder = &MockBalanceRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBalanceRepository) EXPECT() *MockBalanceRepositoryMockRecorder {
	return m.recorder
}

// CreateDefaultBalance mocks base method.
func (m *MockBalanceRepository) CreateDefaultBalance(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDefaultBalance", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateDefaultBalance indicates an expected call of CreateDefaultBalance.
func (mr *MockBalanceRepositoryMockRecorder) CreateDefaultBalance(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDefaultBalance", reflect.TypeOf((*MockBalanceRepository)(nil).CreateDefaultBalance), arg0, arg1)
}

// FindCurrentBalance mocks base method.
func (m *MockBalanceRepository) FindCurrentBalance(arg0 context.Context, arg1 string) (*model.BalanceEntity, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindCurrentBalance", arg0, arg1)
	ret0, _ := ret[0].(*model.BalanceEntity)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindCurrentBalance indicates an expected call of FindCurrentBalance.
func (mr *MockBalanceRepositoryMockRecorder) FindCurrentBalance(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindCurrentBalance", reflect.TypeOf((*MockBalanceRepository)(nil).FindCurrentBalance), arg0, arg1)
}

// UpdateBalance mocks base method.
func (m *MockBalanceRepository) UpdateBalance(arg0 context.Context, arg1 string, arg2 float32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateBalance", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateBalance indicates an expected call of UpdateBalance.
func (mr *MockBalanceRepositoryMockRecorder) UpdateBalance(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateBalance", reflect.TypeOf((*MockBalanceRepository)(nil).UpdateBalance), arg0, arg1, arg2)
}
